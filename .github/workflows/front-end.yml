# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: "Front-end"

# ECMAScript version: ES5 (2009), ES6 (2015), ECMAScript 2016, 2017, 2018, 2019 ...
# Node.js version: 18.12
# npm version: 9.2
#
# https://github.com/tc39/proposals/blob/main/finished-proposals.md
# https://kangax.github.io/compat-table/es6/
# https://nodejs.dev/en/about/releases/
# https://www.npmjs.com/package/npm?activeTab=versions

# Set engine versions in package.json
# {
#     "engines": {
#         "node": "^18.12",
#         "npm": "please-use-yarn",
#         "yarn": "^1.22.19"
#     }
# }

# Yarn is a better package manager.

on:
  pull_request: null
  push:
    branches:
      - "main"
# Add [skip ci] to commit message to skip CI.

permissions:
  contents: "read"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  js_syntax_errors:
    name: "ùüè JavaScript Syntax Errors"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 5
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"
      - name: "Set up NodeJS"
        uses: "actions/setup-node@v3"
        with:
          node-version: "18"
          check-latest: true
          cache: "npm"
      - name: "Configure npm"
        run: "npm config set engine-strict true"
      - name: "Install all dependencies"
        run: "npm ci"
      - name: "Check JavaScript files for syntax errors"
        run: |
          git ls-files --cached -z -- 'resources/js/*.js' \
              | xargs --null -- npx acorn --ecma2015 --module --silent

  js_coding_standards:
    name: "ùüê JavaScript Coding Standards"
    permissions:
      checks: "write"
      contents: "read"
      pull-requests: "read"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 5
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"
      - name: "Set up NodeJS"
        uses: "actions/setup-node@v3"
        with:
          node-version: "18"
          cache: "npm"
      - name: "Configure npm"
        run: "npm config set engine-strict true"
      - name: "Install all dependencies"
        run: "npm ci"
      - name: "Run ESLint"
        run: "npm run js:eslint -- --format json --output-file '${{ runner.temp }}/eslint-report.json'"
        continue-on-error: true
      - name: "Annotate ESLint Results"
        uses: "ataylorme/eslint-annotate-action@v2"
        with:
          check-name: "ùï© ESLint Annotations"
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "${{ runner.temp }}/eslint-report.json"

  scss_coding_standards:
    name: "ùüë Sassy CSS Coding Standards"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 5
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"
      - name: "Set up NodeJS"
        uses: "actions/setup-node@v3"
        with:
          node-version: "18"
          cache: "npm"
      - name: "Configure npm"
        run: "npm config set engine-strict true"
      - name: "Install all dependencies"
        run: "npm ci"
      - name: "Install stylelint-formatter-github-annotate"
        run: "npm install --no-save stylelint-formatter-github-annotate"
      - name: "Check coding style"
        run: "npm run scss:cs -- --custom-formatter=node_modules/stylelint-formatter-github-annotate"

  build:
    name: "ùüí Build"
    needs:
      - "js_syntax_errors"
      - "js_coding_standards"
      - "scss_coding_standards"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 5
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"
      - name: "Set up NodeJS"
        uses: "actions/setup-node@v3"
        with:
          node-version: "18"
          cache: "npm"
      - name: "Configure npm"
        run: "npm config set engine-strict true"
      - name: "Install production dependencies"
        run: "npm ci --omit=dev"
      - name: "Build front-end"
        run: "npm run prod:build"
      - name: "Check differences to repository"
        run: "git diff --exit-code"

  svg:
    name: "ùüì SVG files"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 1
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"
      - name: "Validate SVG files"
        uses: "szepeviktor/svg-validator@v0.2.0"
        with:
          svg_path: "public/**/*.svg"
